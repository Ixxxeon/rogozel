{"remainingRequest":"/Users/ixeon/Rogozel/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/ixeon/Rogozel/node_modules/ts-loader/index.js??ref--9-3!/Users/ixeon/Rogozel/node_modules/eslint-loader/dist/cjs.js!/Users/ixeon/Rogozel/src/main/webapp/app/core/auth/account.service.ts","dependencies":[{"path":"/Users/ixeon/Rogozel/src/main/webapp/app/core/auth/account.service.ts","mtime":1575131945712},{"path":"/Users/ixeon/Rogozel/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/ixeon/Rogozel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ixeon/Rogozel/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ixeon/Rogozel/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/ixeon/Rogozel/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYTsKaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOwppbXBvcnQgeyBTdWJqZWN0LCBvZiB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBzaGFyZVJlcGxheSwgdGFwLCBjYXRjaEVycm9yIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnOwppbXBvcnQgeyBTRVJWRVJfQVBJX1VSTCB9IGZyb20gJ2FwcC9hcHAuY29uc3RhbnRzJzsKbGV0IEFjY291bnRTZXJ2aWNlID0gY2xhc3MgQWNjb3VudFNlcnZpY2UgewogICAgY29uc3RydWN0b3IoaHR0cCkgewogICAgICAgIHRoaXMuaHR0cCA9IGh0dHA7CiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGVkID0gZmFsc2U7CiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGlvblN0YXRlID0gbmV3IFN1YmplY3QoKTsKICAgIH0KICAgIGZldGNoKCkgewogICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KFNFUlZFUl9BUElfVVJMICsgJ2FwaS9hY2NvdW50Jyk7CiAgICB9CiAgICBzYXZlKGFjY291bnQpIHsKICAgICAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QoU0VSVkVSX0FQSV9VUkwgKyAnYXBpL2FjY291bnQnLCBhY2NvdW50KTsKICAgIH0KICAgIGF1dGhlbnRpY2F0ZShpZGVudGl0eSkgewogICAgICAgIHRoaXMudXNlcklkZW50aXR5ID0gaWRlbnRpdHk7CiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGVkID0gaWRlbnRpdHkgIT09IG51bGw7CiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGlvblN0YXRlLm5leHQodGhpcy51c2VySWRlbnRpdHkpOwogICAgfQogICAgaGFzQW55QXV0aG9yaXR5KGF1dGhvcml0aWVzKSB7CiAgICAgICAgaWYgKCF0aGlzLmF1dGhlbnRpY2F0ZWQgfHwgIXRoaXMudXNlcklkZW50aXR5IHx8ICF0aGlzLnVzZXJJZGVudGl0eS5hdXRob3JpdGllcykgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmICghQXJyYXkuaXNBcnJheShhdXRob3JpdGllcykpIHsKICAgICAgICAgICAgYXV0aG9yaXRpZXMgPSBbYXV0aG9yaXRpZXNdOwogICAgICAgIH0KICAgICAgICByZXR1cm4gYXV0aG9yaXRpZXMuc29tZSgoYXV0aG9yaXR5KSA9PiB0aGlzLnVzZXJJZGVudGl0eS5hdXRob3JpdGllcy5pbmNsdWRlcyhhdXRob3JpdHkpKTsKICAgIH0KICAgIGlkZW50aXR5KGZvcmNlKSB7CiAgICAgICAgaWYgKGZvcmNlIHx8ICF0aGlzLmF1dGhlbnRpY2F0ZWQpIHsKICAgICAgICAgICAgdGhpcy5hY2NvdW50Q2FjaGUkID0gbnVsbDsKICAgICAgICB9CiAgICAgICAgaWYgKCF0aGlzLmFjY291bnRDYWNoZSQpIHsKICAgICAgICAgICAgdGhpcy5hY2NvdW50Q2FjaGUkID0gdGhpcy5mZXRjaCgpLnBpcGUoY2F0Y2hFcnJvcigoKSA9PiB7CiAgICAgICAgICAgICAgICByZXR1cm4gb2YobnVsbCk7CiAgICAgICAgICAgIH0pLCB0YXAoYWNjb3VudCA9PiB7CiAgICAgICAgICAgICAgICBpZiAoYWNjb3VudCkgewogICAgICAgICAgICAgICAgICAgIHRoaXMudXNlcklkZW50aXR5ID0gYWNjb3VudDsKICAgICAgICAgICAgICAgICAgICB0aGlzLmF1dGhlbnRpY2F0ZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSBudWxsOwogICAgICAgICAgICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRlZCA9IGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5hdXRoZW50aWNhdGlvblN0YXRlLm5leHQodGhpcy51c2VySWRlbnRpdHkpOwogICAgICAgICAgICB9KSwgc2hhcmVSZXBsYXkoKSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0aGlzLmFjY291bnRDYWNoZSQ7CiAgICB9CiAgICBpc0F1dGhlbnRpY2F0ZWQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRlZDsKICAgIH0KICAgIGlzSWRlbnRpdHlSZXNvbHZlZCgpIHsKICAgICAgICByZXR1cm4gdGhpcy51c2VySWRlbnRpdHkgIT09IHVuZGVmaW5lZDsKICAgIH0KICAgIGdldEF1dGhlbnRpY2F0aW9uU3RhdGUoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRpb25TdGF0ZS5hc09ic2VydmFibGUoKTsKICAgIH0KICAgIGdldEltYWdlVXJsKCkgewogICAgICAgIHJldHVybiB0aGlzLmlzSWRlbnRpdHlSZXNvbHZlZCgpID8gdGhpcy51c2VySWRlbnRpdHkuaW1hZ2VVcmwgOiBudWxsOwogICAgfQp9OwpBY2NvdW50U2VydmljZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbCiAgICBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pLAogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIEh0dHBDbGllbnQgIT09ICJ1bmRlZmluZWQiICYmIEh0dHBDbGllbnQpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3RdKQpdLCBBY2NvdW50U2VydmljZSk7CmV4cG9ydCB7IEFjY291bnRTZXJ2aWNlIH07Cg=="},{"version":3,"file":"/Users/ixeon/Rogozel/src/main/webapp/app/core/auth/account.service.ts","sourceRoot":"","sources":["/Users/ixeon/Rogozel/node_modules/eslint-loader/dist/cjs.js!/Users/ixeon/Rogozel/src/main/webapp/app/core/auth/account.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject, of } from 'rxjs';\nimport { shareReplay, tap, catchError } from 'rxjs/operators';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Account } from 'app/core/user/account.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n  private userIdentity: Account;\n  private authenticated = false;\n  private authenticationState = new Subject<any>();\n  private accountCache$: Observable<Account>;\n\n  constructor(private http: HttpClient) {}\n\n  fetch(): Observable<Account> {\n    return this.http.get<Account>(SERVER_API_URL + 'api/account');\n  }\n\n  save(account: Account): Observable<Account> {\n    return this.http.post<Account>(SERVER_API_URL + 'api/account', account);\n  }\n\n  authenticate(identity) {\n    this.userIdentity = identity;\n    this.authenticated = identity !== null;\n    this.authenticationState.next(this.userIdentity);\n  }\n\n  hasAnyAuthority(authorities: string[] | string): boolean {\n    if (!this.authenticated || !this.userIdentity || !this.userIdentity.authorities) {\n      return false;\n    }\n\n    if (!Array.isArray(authorities)) {\n      authorities = [authorities];\n    }\n\n    return authorities.some((authority: string) => this.userIdentity.authorities.includes(authority));\n  }\n\n  identity(force?: boolean): Observable<Account> {\n    if (force || !this.authenticated) {\n      this.accountCache$ = null;\n    }\n\n    if (!this.accountCache$) {\n      this.accountCache$ = this.fetch().pipe(\n        catchError(() => {\n          return of(null);\n        }),\n        tap(account => {\n          if (account) {\n            this.userIdentity = account;\n            this.authenticated = true;\n          } else {\n            this.userIdentity = null;\n            this.authenticated = false;\n          }\n          this.authenticationState.next(this.userIdentity);\n        }),\n        shareReplay()\n      );\n    }\n    return this.accountCache$;\n  }\n\n  isAuthenticated(): boolean {\n    return this.authenticated;\n  }\n\n  isIdentityResolved(): boolean {\n    return this.userIdentity !== undefined;\n  }\n\n  getAuthenticationState(): Observable<any> {\n    return this.authenticationState.asObservable();\n  }\n\n  getImageUrl(): string {\n    return this.isIdentityResolved() ? this.userIdentity.imageUrl : null;\n  }\n}\n"]}]}