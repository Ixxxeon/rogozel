{"remainingRequest":"/Users/ixeon/Rogozel/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/ixeon/Rogozel/node_modules/ts-loader/index.js??ref--9-3!/Users/ixeon/Rogozel/node_modules/eslint-loader/dist/cjs.js!/Users/ixeon/Rogozel/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts","dependencies":[{"path":"/Users/ixeon/Rogozel/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts","mtime":1575131944802},{"path":"/Users/ixeon/Rogozel/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/ixeon/Rogozel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ixeon/Rogozel/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ixeon/Rogozel/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/ixeon/Rogozel/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYTsKaW1wb3J0IHsgSmhpQWxlcnRTZXJ2aWNlIH0gZnJvbSAnbmctamhpcHN0ZXInOwppbXBvcnQgeyBIdHRwUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7CmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsKaW1wb3J0IHsgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnOwpsZXQgTm90aWZpY2F0aW9uSW50ZXJjZXB0b3IgPSBjbGFzcyBOb3RpZmljYXRpb25JbnRlcmNlcHRvciB7CiAgICBjb25zdHJ1Y3RvcihhbGVydFNlcnZpY2UpIHsKICAgICAgICB0aGlzLmFsZXJ0U2VydmljZSA9IGFsZXJ0U2VydmljZTsKICAgIH0KICAgIGludGVyY2VwdChyZXF1ZXN0LCBuZXh0KSB7CiAgICAgICAgcmV0dXJuIG5leHQuaGFuZGxlKHJlcXVlc3QpLnBpcGUodGFwKChldmVudCkgPT4gewogICAgICAgICAgICBpZiAoZXZlbnQgaW5zdGFuY2VvZiBIdHRwUmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIGNvbnN0IGFyciA9IGV2ZW50LmhlYWRlcnMua2V5cygpOwogICAgICAgICAgICAgICAgbGV0IGFsZXJ0ID0gbnVsbDsKICAgICAgICAgICAgICAgIGFyci5mb3JFYWNoKGVudHJ5ID0+IHsKICAgICAgICAgICAgICAgICAgICBpZiAoZW50cnkudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnYXBwLWFsZXJ0JykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQgPSBldmVudC5oZWFkZXJzLmdldChlbnRyeSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBpZiAoYWxlcnQpIHsKICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGFsZXJ0ID09PSAnc3RyaW5nJykgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFsZXJ0U2VydmljZS5zdWNjZXNzKGFsZXJ0LCBudWxsLCBudWxsKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9KSk7CiAgICB9Cn07Ck5vdGlmaWNhdGlvbkludGVyY2VwdG9yID0gdHNsaWJfMS5fX2RlY29yYXRlKFsKICAgIEluamVjdGFibGUoKSwKICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBKaGlBbGVydFNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIEpoaUFsZXJ0U2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdF0pCl0sIE5vdGlmaWNhdGlvbkludGVyY2VwdG9yKTsKZXhwb3J0IHsgTm90aWZpY2F0aW9uSW50ZXJjZXB0b3IgfTsK"},{"version":3,"file":"/Users/ixeon/Rogozel/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts","sourceRoot":"","sources":["/Users/ixeon/Rogozel/node_modules/eslint-loader/dist/cjs.js!/Users/ixeon/Rogozel/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAC9C,OAAO,EAAgC,YAAY,EAA0B,MAAM,sBAAsB,CAAC;AAC1G,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAGrC,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAClC,YAAoB,YAA6B;QAA7B,iBAAY,GAAZ,YAAY,CAAiB;IAAG,CAAC;IAErD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,GAAG,CAAC,CAAC,KAAqB,EAAE,EAAE;YAC5B,IAAI,KAAK,YAAY,YAAY,EAAE;gBACjC,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACjC,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBAClB,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;wBAC7C,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBAClC;gBACH,CAAC,CAAC,CAAC;gBACH,IAAI,KAAK,EAAE;oBACT,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;wBAC7B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;qBAC9C;iBACF;aACF;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF,CAAA;AAvBY,uBAAuB;IADnC,UAAU,EAAE;iEAEuB,eAAe,oBAAf,eAAe;GADtC,uBAAuB,CAuBnC;SAvBY,uBAAuB","sourcesContent":["import { JhiAlertService } from 'ng-jhipster';\nimport { HttpInterceptor, HttpRequest, HttpResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class NotificationInterceptor implements HttpInterceptor {\n  constructor(private alertService: JhiAlertService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          const arr = event.headers.keys();\n          let alert = null;\n          arr.forEach(entry => {\n            if (entry.toLowerCase().endsWith('app-alert')) {\n              alert = event.headers.get(entry);\n            }\n          });\n          if (alert) {\n            if (typeof alert === 'string') {\n              this.alertService.success(alert, null, null);\n            }\n          }\n        }\n      })\n    );\n  }\n}\n"]}]}